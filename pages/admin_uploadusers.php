<?php
// --------------------------------------------------------------------
// admin_uploadusers.php -- Adds users by loading a csv file.
//
// Created: 12/17/14 DLB
// Updated: 12/30/14 DLB -- Hacked from Epic Scouts
// --------------------------------------------------------------------

require_once "../maindef.php";
$loc = rmabs(__FILE__);

session_start();
log_page();
CheckLogin();
CheckAdmin();
$timer = new timer();
$ins_file = "../docs/UploadUsers.md";
$error_msg = "";
$success_msg = "";
$instructions = "";

if(file_exists($ins_file)) { $instructions = MarkdownToHtml(file_get_contents($ins_file)); }

$param_list = array(
array("FieldName" => "CsvFile",  "FieldType" => "File", "Caption" => "CSV File:"));  
$doform = true;

if( $_SERVER["REQUEST_METHOD"] == "POST")
{
    DenyGuest();
    if(isset($_POST["Upload"]))
    {
        if(!isset($_FILES["CsvFile"])) 
        {
            $error_msg = "No File Specified.";
            goto GenerateHTML;
        }
        $fileinfo = $_FILES["CsvFile"];
        $filesize = $fileinfo["size"];
        $filetype = $fileinfo["type"];
        $fileerr  = $fileinfo["error"];
        $tempfile = $fileinfo["tmp_name"];
        if(empty($tempfile) || $fileerr == 4)
        {
            $error_msg = "No input file given.";
            goto GenerateHTML;
        }
        if($filesize <= 0)
        {
            $error_msg = "Input file was empty.";
            goto GenerateHTML;
        }
        ProcessBulkUsers($tempfile, $error_msg);
        $doform = false;
        goto GenerateHTML;
    }
    if(isset($_POST["Download"])) 
    {
        GenerateDownload();
        exit;   // if don't exit here, file will be filled with html being generated by php
    }
}

GenerateHTML:

include "forms/header.php";
include "forms/nav_form.php";
include "forms/admin_menubar.php";
include "forms/admin_uploadusers_form.php";
include "forms/footer.php";


// --------------------------------------------------------------------
function GenerateDownload()
{
    $loc = rmabs(__FILE__ . ".GenerateDownload");
    $sql = 'SELECT * FROM Users';
    $result = SqlQuery($loc, $sql);
    $first = true;

    header('Content-Type: application/csv');
    header('Content-Disposition: attachment; filename="Users_' . date("Y-m-d") . '.csv";');
    $ff = fopen('php://memory', 'w');
    //rewind($f);
    $fieldnames = array();
    while($row = $result->fetch_assoc())
    {
        if($first)
        {
            $fieldnames = array_keys($row);
            fputcsv($ff, $fieldnames, ",");
            $first = false;
        }
        $data = array();
        foreach($fieldnames as $k)
        {
            if(isset($row[$k])) $data[] = $row[$k];
            else                $data[] = "";   
        }
        fputcsv($ff, $data);
    }
    fseek($ff, 0);
    header('Content-Type: application/csv');
    header('Content-Disposition: attachment; filename="Users_' . date("Y-m-d") . '.csv";');
    fpassthru($ff);
}

// --------------------------------------------------------------------
function ProcessBulkUsers($filename, &$error_msg)
{
    global $config;
    $loc = rmabs(__FILE__ . ".ProcessBulkUsers");

    $file = fopen($filename, "r");
    if($file === false)
    {
        $error_msg = "Unable to open file.";
        return 0;
    }
    
    $n_okay = 0;
    $n_fail = 0;
    $ln = 1;
    // The first line is the column headers. 
    $header = fgetcsv($file); $ln++;
    if($header === false) return $n;
    // Now, do some sanity checks to make sure we have
    // an appropriate file.
    if(!in_array("UserName",  $header) ||
       !in_array("LastName",  $header) ||
       !in_array("FirstName", $header))
   
    {
        $error_msg = "Input file does not required columns.";
    }
    if((!in_array("Password",  $header) && !in_array("PasswordHash", $header)))
    {
        $error_msg = "Input file does not a password column.";
    }
    
    $tstart = microtime(true);  // Time the entire operation...  Don't go over 4 minutes.
    $btimeout = false;
    
    while(true)
    {
        $result = set_time_limit(60);   
        if($result == false) {log_error($loc, "Unable to set/reset time limit to 20 seconds."); }
    
        $data = fgetcsv($file); $ln++;
        if($data === false) break;
        // Don't process blank lines.
        if(count($data) <= 0) continue;  
        if(is_null($data[0])) continue;
        
        // Organize the data into an associtive array
        $fields = JoinKeyValues($header, $data);
                
        // Make sure none of the required fields are empty.
        if(empty($fields["UserName"]) ||
           empty($fields["LastName"]) ||
           empty($fields["FirstName"]) ||
           (empty($fields["Password"]) && empty($fields["PasswordHash"])))
        {
            log_msg($loc, 'User not added. Some requried fields are empty. Line ' . $ln);
            $n_fail++;
            continue;
        }           
        
        if(empty($fields["NickName"])) $fields["NickName"] = "";
        if(empty($fields["Title"]))    $fields["Title"]    = "";
        if(empty($fields["Email"]))    $fields["Email"]    = "";
        if(empty($fields["Active"]))   $fields["Active"]   = 0;
        if(empty($fields["Tags"]))     $fields["Tags"]     = "";
        if(empty($fields["Picture"]))  $fields["Picture"]  = "";
        if(empty($fields["BadgeID"]))  $fields["BadgeID"]  = "";
	    if(empty($fields["IPT"]))      $fields ["IPT"]     = "";
        
        $error_msg = CreateNewUser($fields);
        if($error_msg === true)
        {
            $n_okay++;
        }
        else
        {
            log_msg($loc, array('User not added. Line ' . $ln, $error_msg));
            $n_fail++;
        }
        
        $telp = (microtime(true) - $tstart);
        if($telp > 240.0) {$btimeout = true; break; }
        
    }
    $error_msg = $n_okay . ' users added. ' . $n_fail . ' failures. ' . $ln . ' lines processed.';
    if($btimeout) {$error_msg .= ' ** TimeOut Occured, Process aborted. **'; }
    log_msg($loc, $error_msg);
}

?>
